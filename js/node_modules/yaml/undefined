<!doctype html>
<html lang="en">

<head>
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-2876079-11"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'UA-2876079-11');
  </script>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <meta name="description" content='README'>
  <link rel="icon" href="favicon.ico">
  <link rel="alternate" type="application/rss+xml" title="twos.dev" href="/feed.rss" />
  <title>README</title>
  <link rel="stylesheet" href="style.css" />
  <style>
    .spectrum {
      height: 10em;
      width: 10em;
      background: conic-gradient(
        hsl(0, 90%, 65%),
        hsl(36, 90%, 65%),
        hsl(72, 90%, 65%),
        hsl(108, 90%, 65%),
        hsl(144, 90%, 65%),
        hsl(180, 90%, 65%),
        hsl(216, 90%, 65%),
        hsl(252, 90%, 65%),
        hsl(288, 90%, 65%),
        hsl(324, 90%, 65%),
        hsl(360, 90%, 65%)
      );
      border: 1px solid;
      border-radius: 90%;
    }
    @media (prefers-color-scheme:light) {
      .spectrum {
        border-color: black;
      }
    @media (prefers-color-scheme:dark) {
      .spectrum {
        border-color: white;
      }
    }

    summary {
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="container">
    <header>
      &larr; <a href="index.html">twos.dev</a>
      
    </header>
    <article><h1>YAML &lt;a href=&quot;https://www.npmjs.com/package/yaml&quot;&gt;&lt;img align=&quot;right&quot; src=&quot;https://badge.fury.io/js/yaml.svg&quot; title=&quot;npm package&quot; /&gt;&lt;/a&gt;</h1><p><code>yaml</code> is a definitive library for <a href="http://yaml.org/">YAML</a>, the human friendly data serialization standard. This library:</p><ul><li>Supports both YAML 1.1 and YAML 1.2 and all common data schemas,</li><li>Passes all of the <a href="https://github.com/yaml/yaml-test-suite">yaml-test-suite</a> tests,</li><li>Can accept any string as input without throwing, parsing as much YAML out of it as it can, and</li><li>Supports parsing, modifying, and writing YAML comments and blank lines.</li></ul><p>The library is released under the ISC open source license, and the code is <a href="https://github.com/eemeli/yaml/">available on GitHub</a>. It has no external dependencies and runs on Node.js as well as modern browsers.</p><p>For the purposes of versioning, any changes that break any of the documented endpoints or APIs will be considered semver-major breaking changes. Undocumented library internals may change between minor versions, and previous APIs may be deprecated (but not removed).</p><p>For more information, see the project's documentation site: <a href="https://eemeli.org/yaml/"><strong>eemeli.org/yaml</strong></a></p><p>To install:</p><pre data-language="sh">npm install yaml
</pre><p><strong>Note:</strong> These docs are for <code>yaml@2</code>. For v1, see the <a href="https://github.com/eemeli/yaml/tree/v1.10.0">v1.10.0 tag</a> for the source and <a href="https://eemeli.org/yaml/v1/">eemeli.org/yaml/v1</a> for the documentation.</p><h2>API Overview</h2><p>The API provided by <code>yaml</code> has three layers, depending on how deep you need to go: <a href="https://eemeli.org/yaml/#parse-amp-stringify">Parse &amp; Stringify</a>, <a href="https://eemeli.org/yaml/#documents">Documents</a>, and the underlying <a href="https://eemeli.org/yaml/#parsing-yaml">Lexer/Parser/Composer</a>. The first has the simplest API and &quot;just works&quot;, the second gets you all the bells and whistles supported by the library along with a decent <a href="https://eemeli.org/yaml/#content-nodes">AST</a>, and the third lets you get progressively closer to YAML source, if that's your thing.</p><pre data-language="js">import { parse, stringify } from 'yaml'
// or
import YAML from 'yaml'
// or
const YAML = require('yaml')
</pre><h3>Parse &amp; Stringify</h3><ul><li><a href="https://eemeli.org/yaml/#yaml-parse"><code>parse(str, reviver?, options?): value</code></a></li><li><a href="https://eemeli.org/yaml/#yaml-stringify"><code>stringify(value, replacer?, options?): string</code></a></li></ul><h3>Documents</h3><ul><li><a href="https://eemeli.org/yaml/#documents"><code>Document</code></a><ul><li><a href="https://eemeli.org/yaml/#creating-documents"><code>constructor(value, replacer?, options?)</code></a></li><li><a href="https://eemeli.org/yaml/#working-with-anchors"><code>#anchors</code></a></li><li><a href="https://eemeli.org/yaml/#content-nodes"><code>#contents</code></a></li><li><a href="https://eemeli.org/yaml/#stream-directives"><code>#directives</code></a></li><li><a href="https://eemeli.org/yaml/#errors"><code>#errors</code></a></li><li><a href="https://eemeli.org/yaml/#errors"><code>#warnings</code></a></li></ul></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isDocument(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#parsing-documents"><code>parseAllDocuments(str, options?): Document[]</code></a></li><li><a href="https://eemeli.org/yaml/#parsing-documents"><code>parseDocument(str, options?): Document</code></a></li></ul><h3>Content Nodes</h3><ul><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isAlias(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isCollection(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isMap(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isNode(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isPair(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isScalar(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#identifying-nodes"><code>isSeq(foo): boolean</code></a></li><li><a href="https://eemeli.org/yaml/#scalar-values"><code>new Scalar(value)</code></a></li><li><a href="https://eemeli.org/yaml/#collections"><code>new YAMLMap()</code></a></li><li><a href="https://eemeli.org/yaml/#collections"><code>new YAMLSeq()</code></a></li><li><a href="https://eemeli.org/yaml/#working-with-anchors"><code>doc.createAlias(node, name?): Alias</code></a></li><li><a href="https://eemeli.org/yaml/#creating-nodes"><code>doc.createNode(value, options?): Node</code></a></li><li><a href="https://eemeli.org/yaml/#creating-nodes"><code>doc.createPair(key, value): Pair</code></a></li><li><a href="https://eemeli.org/yaml/#modifying-nodes"><code>visit(node, visitor)</code></a></li></ul><h3>Parsing YAML</h3><ul><li><a href="https://eemeli.org/yaml/#lexer"><code>new Lexer().lex(src)</code></a></li><li><a href="https://eemeli.org/yaml/#parser"><code>new Parser(onNewLine?).parse(src)</code></a></li><li><a href="https://eemeli.org/yaml/#composer"><code>new Composer(options?).compose(tokens)</code></a></li></ul><h2>YAML.parse</h2><pre data-language="yaml"># file.yml
YAML:
  - A human-readable data serialization language
  - https://en.wikipedia.org/wiki/YAML
yaml:
  - A complete JavaScript implementation
  - https://www.npmjs.com/package/yaml
</pre><pre data-language="js">import fs from 'fs'
import YAML from 'yaml'

YAML.parse('3.14159')
// 3.14159

YAML.parse('[ true, false, maybe, null ]\n')
// [ true, false, 'maybe', null ]

const file = fs.readFileSync('./file.yml', 'utf8')
YAML.parse(file)
// { YAML:
//   [ 'A human-readable data serialization language',
//     'https://en.wikipedia.org/wiki/YAML' ],
//   yaml:
//   [ 'A complete JavaScript implementation',
//     'https://www.npmjs.com/package/yaml' ] }
</pre><h2>YAML.stringify</h2><pre data-language="js">import YAML from 'yaml'

YAML.stringify(3.14159)
// '3.14159\n'

YAML.stringify([true, false, 'maybe', null])
// `- true
// - false
// - maybe
// - null
// `

YAML.stringify({ number: 3, plain: 'string', block: 'two\nlines\n' })
// `number: 3
// plain: string
// block: |
//   two
//   lines
// `
</pre><hr><p>Browser testing provided by:</p><p>&lt;a href=&quot;https://www.browserstack.com/open-source&quot;&gt; &lt;img width=200 src=&quot;https://eemeli.org/yaml/images/browserstack.svg&quot; /&gt; &lt;/a&gt;</p></article>

    <footer>
      &larr; <a href="index.html">twos.dev</a> /
      
        <a href="https://github.com/glacials/twos.dev/blob/main/src/js/node_modules/yaml/undefined">Source</a>
      
    </footer>
  </div></body>
</html>
