/*
 * Unique Markdown-compatible features of this stylesheet:
 *
 * - When the exact text "macos" is in an <img>'s src attribute,
 *   the image is a bit wider on the page to make it look like
 *   macOS's added drop shadow is not part of the image.
 * - When several images are in a paragraph together,
 *   they appear in a grid.
 */

/*
 * Each set of variables that shares the same first word looks good with or on each other.
 */

:root {
  --container-width: 33rem;
}

@media (min-width: 55rem) {
  :root {
    --margin-left-standard: 5rem;
  }
}


@media not (min-width: 55rem) {
  :root {
    --margin-left-standard: .75rem;
  }
}

@media (prefers-color-scheme: light) {
  :root {
    --all-bg:  rgba(255, 255, 255, 1);

    --traditional-bg: var(--all-bg);
    --traditional-fg: rgba(0, 0, 0, 1);
    --traditional-fg-mute: rgba(150, 90, 50, 0.3);
    --traditional-fg-pop: rgba(150, 90, 50, 1);

    --page-bg: var(--all-bg);
    --page-border: rgb(0, 0, 0);
    --page-fg: rgba(0, 0, 0, 1);

    --lighter-bg: rgba(255, 255, 255, 1);
    --lighter-fg: rgba(200, 200, 200, 1);

    /* Use raised colors for items that should appear as if they are above the page. */
    --raised-bg: rgba(215, 215, 215, 1);
    --raised-fg: rgba(10, 10, 10, 1);

    --shadow: rgba(0, 0, 0, 0.5);

    /* --under-white looks good as a background under a white foreground,
     * regardless of color scheme.
     */
    --under-white: rgba(50, 50, 50, 1);
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --all-bg:  rgb(53, 60, 65);

    --traditional-bg: var(--all-bg);
    --traditional-fg: rgb(166, 194, 202);
    --traditional-fg-mute: #606e70;
    --traditional-fg-pop: #baeee3;

    --page-bg: var(--all-bg);
    --page-border: rgb(34, 34, 34);
    --page-fg:  rgb(215, 229, 255);

    --lighter-bg: rgba(240, 240, 240, 1);
    --lighter-fg: rgb(132, 117, 45);

    /* Use raised colors for items that should appear as if they are above the page. */
    --raised-bg: rgb(60, 40, 40);
    --raised-fg: rgba(244, 214, 205, 1);

    --shadow: rgb(0, 0, 0, 0.25);

    --under-white: rgba(34, 34, 34, 1);
  }
}

@keyframes appear {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

a.black-icon:hover {
  filter: invert();
}

a.white-icon:hover img {
  filter: invert();
}

a[href],
a[href]:hover,
a[href]:visited {
  color: var(--traditional-fg-pop);
  text-decoration: underline;
  text-decoration-color: var(--traditional-fg-mute);
  text-decoration-thickness: 3px;
  text-underline-offset: 0.25rem;
}

a[href]:hover {
  background: var(--traditional-fg-pop);
  color: var(--traditional-bg);
}

small a[href], small a[href]:hover, small a[href]:visited {
  text-decoration: none; /* Small lines are too close together for an underline to look okay. */
}

a:has(h1),
a:has(h2),
a:has(h3),
a:has(h4),
a:has(h5),
a:has(h6) {
  display: block;
  text-decoration: none;
}

a:hover:has(img) {
  background: inherit;
}

article {
  margin: 1rem 0;
  padding: 0;
}

article > *:not(:has(img)):not(article):not(pre),
footer {
  margin-left: var(--margin-left-standard);
  margin-right: var(--margin-left-standard);
}

@media (min-width: 55rem) {
  article
    > *:not(.photo-grid):not(article):not(p:has(img[src*="macos"])):not(pre),
  footer {
    margin-left: var(--margin-left-standard);
    margin-right: auto;
    max-width: var(--container-width);
  }
}

h1 {
  /* background: rgba(0, 0, 0, 0.05); */
  color: var(--page-fg);
}

article a h1 {
  font-size: 2rem;
}

/* Addenda (level-1 headings NOT at the top of pages */
article:not(.post) > h1 {
  display: block;
  font-size: 1em;
  margin-top: 4rem;
  text-align: center;
}

article:not(.post) > h1:after {
  opacity: 0.3;
  content: "an addendum";
  display: block;
  margin-top: 1rem;
}

article img {
  max-width: 100%;
}

article p:has(img) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  margin-bottom: 0;
  margin-top: 3rem;
}

blockquote {
  border-left: 1px solid var(--traditional-fg);
  padding-left: 1rem;
}

body {
  background: var(--page-bg);
  color: var(--traditional-fg);
  font-display: optional;
  font-family:
    Fira Code,
    inconsolata,
    monospace;
  font-size: 15px;
  height: 100%;
  line-height: 1.7rem;
  margin: 0;
}

@media (max-width: 55rem) {
  body {
    /* Prevent mobile rubber-band-scrolling from revealing a contrasting color. */
    background: var(--traditional-bg);
  }
}

/* Disable page scrolling when viewing a fullscreen image. */
body:has(.gallery-item input:checked) {
  overflow: hidden;
}

button,
input[type="submit"] {
  background: none;
  border: 1px solid var(--traditional-fg);
  color: inherit;
}

/* Nesting em/i should drop styling. Extend nesting levels as needed. */
em em,
em i,
i em,
i i {
  font-style: normal;
}

input {
  font-family: inherit;
}

figcaption {
  font-style: italic;
}

footer {
  font-size: 0.75em;
  line-height: 1.1em;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  display: block;
  font-style: italic;
}

h1 {
  hyphens: none;
  line-height: 0.9;
}

/* Text document hero images */
h1 + figure,
h1 + p + figure {
  margin: auto;
  max-width: var(--container-width);
}

h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small {
  color: var(--traditional-fg-mute);
  display: block;
  font-family: monospace;
  font-size: 0.9rem;
  font-weight: normal;
  letter-spacing: -1px;
  margin-left: 1rem;
}

h1:has(small),
h2:has(small),
h3:has(small),
h4:has(small),
h5:has(small),
h6:has(small) {
  margin-bottom: 0;
}

h2 {
  margin-top: 4rem;
}

h2,
h3 {
  color: var(--page-fg);
}

h3,
h4,
h5,
h6 {
  margin-top: 1.5rem;
}

h4,
h5,
h6 {
  display: block;
}

hr {
  border: none;
}

hr::before {
  content: "* * *";
  display: block;
  font-size: 0.75rem;
  text-align: center;
}

/* Postfaces will be <hr> followed by an italicized <p>. */
hr + p:has(i),
hr + p:has(em) {
  font-size: 0.8rem;
  margin: auto;
  text-align: center;
}

li {
  margin: 0.4rem 0;
}

li p {
  margin: 0 0 2rem 1rem;
}

nav {
  color: var(--traditional-fg-pop);
  font-style: italic;
  margin: 1rem var(--margin-left-standard);
  max-width: var(--container-width);
}

nav .hierarchy {
  margin: auto 0;
}

nav h1 {
  font-size: 1em;
  margin-top: 1rem;
}

nav {
  display: grid;
}

nav:has(.breadcrumb) {
  grid-column-gap: 5px;
  grid-template-columns: 1fr 1fr 1fr;
}

nav h1.post-title {
  margin: 2rem auto 0;
}

nav h1.website-title {
  display: inline;
  font-size: 1em;
  margin-bottom: 1rem;
  text-align: inherit;
}

.breadcrumb:not(.title)::after {
  content: "/";
}

.breadcrumb,
.nav-text,
.nav-wrapper {
  display: inline;
  white-space: nowrap;
}

.nav-wrapper + .nav-wrapper::before {
  content: "∙";
}

p {
  margin: 1.5em 0;
}

p > img {
  margin: auto;
  max-height: 60vh;
}

/* Image captions are defined as a paragraph entirely in italics after an image. */
p:has(img) + p:has(i:only-child),
p:has(img) + p:has(em:only-child),
figure + p:has(i:only-child),
figure + p:has(em:only-child) {
  font-size: 0.85rem;
  font-style: italic;
  margin: 1rem 5rem 4rem !important;
  max-width: 30rem;
  text-align: center;
}

/* Show caption on top of zoomed image. */
p:has(.gallery-item input:checked) + p,
.caption {
  background: var(--traditional-bg);
  display: block;
  left: 15%;
  margin: 0;
  max-width: 50rem;
  padding: 1rem;
  position: fixed;
  top: 5%;
  transform: translate(-15%, -15%);
  z-index: 10;
}

p:has(img),
p img {
  margin-left: auto;
  margin-right: auto;
}

/*
 * The paragraph after an image or image set must be a caption.
 * Captions are italic.
 */
p:has(.gallery-item) + p {
  font-style: italic;
  margin-top: 0;
  margin-bottom: 4rem;
  text-align: center;
}

ul {
  list-style-type: "⁃ ";
}

video + video {
  margin-left: 1rem;
}

.alert {
  background: var(--raised-bg);
  color: var(--raised-fg);
  margin: 0;
  margin-bottom: 3rem;
  margin-top: 2rem;
  padding: 1.25rem;
  padding-top: 2rem;
}

@media (min-width: 55rem) {
  .alert {
    box-shadow: 0.5rem 0.5rem var(--shadow);
  }
}

.caption {
  font-style: italic;
}

.caption.exif {
  background-color: var(--traditional-bg);
  bottom: 0%;
  font-size: 0.75rem;
  line-height: 1rem;
  top: auto;
}

.container {
  background: var(--traditional-bg);
  margin: auto;
  margin-top: 2rem;
  padding: 0;
}

@media (min-width: 55rem) {
  .container {
    margin-bottom: 2rem;
  }
}

@media not (min-width: 55rem) {
  .container {
    margin: auto;
  }
}

.dark-only {
  display: block;
}

.draft {
  color: var(--traditional-fg-pop);
  font-size: 2rem;
  text-align: center;
}

.footnote-ref {
  margin: 0.1rem;
}

.footnotes {
  font-size: 0.6em;
  line-height: 1.5em;
}

.gallery-item:has(input[type="checkbox"]) img {
  cursor: zoom-in;
  height: 100%;
  object-fit: cover;
  width: 100%;
}

.gallery-item:has(input[type="checkbox"]:checked) img {
  cursor: zoom-out;
}

.gallery-item input[type="checkbox"] {
  display: none;
}

.gallery-item .caption.exif {
  display: none;
}

.gallery-item:has(input:checked) .caption.exif {
  display: block;
}

.gallery-item:has(input:checked) {
  background: var(--page-bg);
  display: fixed;
  height: 100vh;
  left: 0;
  margin: 0;
  overflow: hidden;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 1;
}

.gallery-item:has(input) img.thumbnail {
  display: block;
}

.gallery-item:has(input) img.fullsize {
  display: none;
}

.gallery-item:has(input:checked) img.thumbnail {
}

.gallery-item:has(input:checked) img.fullsize,
.gallery-item:has(input:checked) img.thumbnail {
  display: block;
  left: 50%;
  max-height: 100vh;
  max-width: 100vw;
  object-fit: scale-down;
  position: fixed;
  top: 50%;
  transform: translate(-50%, -50%);
}

.gallery-item:has(input:checked) img.fullsize {
  z-index: 9;
}

.light-only {
  display: none;
}

.photo-grid {
  display: grid;
  grid-auto-rows: 10rem;
  grid-auto-columns: 1fr;
  grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
}

.photo-grid h2 {
  margin: auto;
  text-align: center;
  vertical-align: middle;
}

.photo-grid img {
  float: left;
  width: 100%;
}

.photo-grid a:hover img {
  box-shadow: -0.5rem -0.5rem 0 0.5rem var(--traditional-fg-pop);
  z-index: 99;
}

.post {
  margin: 5rem 0 0 0;
  padding: 2rem 0 0 0;
}

@media (min-width: 55rem) {
  .post {
    padding: 0;
    margin-bottom: 6rem;
  }
}

.publish-date {
  display: block;
  font-size: 0.75em;
  text-align: center;
}

.selected {
  color: var(--traditional-fg-pop);
  cursor: default;
}

@media (prefers-color-scheme: light) {
  .white-icon {
    filter: invert();
  }
}

/* Start syntax highlighting (see https://github.com/alecthomas/chroma) */

pre {
  margin-left: var(--margin-left-standard);
  margin-right: auto;
  width: fit-content;
}

pre code {
  background-color: var(--under-white);
  color: white;
  display: block;
  padding: 1rem 0;
  white-space: normal;
}

@media not (min-width: 55rem) {
  pre {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}

@media (min-width: 55rem) {
  pre:has(code) {
    box-shadow: 0.5rem 0.5rem var(--shadow);
  }
}

pre .ln {
  margin-left: 1rem;
  user-select: none;
  -webkit-user-select: none;
}

pre .cl {
  margin-left: 1rem;
  margin-right: 1rem;
}

pre .line {
  margin-right: 2rem;
}

pre {
  background-color: var(--page-bg);
  color: var(--page-fg);
  font-family: monospace;
  letter-spacing: 0;
  margin-bottom: 2rem;
}

/* Background */
.bg {
  color: var(--page-fg);
  background-color: var(--page-bg);
}

/* PreWrapper */
.chroma {
  color: var(--page-fg);
  background-color: var(--page-bg);
}

/* LineNumbers targeted by URL anchor */
.chroma .ln:target {
  color: var(--page-fg);
  background-color: var(--page-bg);
}

/* LineNumbersTable targeted by URL anchor */
.chroma .lnt:target {
  color: #f8f8f2;
  background-color: #3d3f4a;
}

/* LineTableTD */
.chroma .lntd {
  vertical-align: top;
  padding: 0;
  margin: 0;
  border: 0;
}

/* LineTable */
.chroma .lntable {
  border-spacing: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

/* LineHighlight */
.chroma .hl {
  background-color: #3d3f4a;
}

/* LineNumbersTable */
.chroma .lnt {
  white-space: pre;
  user-select: none;
  margin-right: 0.4rem;
  padding: 0 0.4rem 0 0.4rem;
  color: rgba(255, 255, 255, 0.1);
}

/* LineNumbers */
.chroma .ln {
  white-space: pre;
  user-select: none;
  margin-right: 0.4rem;
  padding: 0 0.4rem 0 0.4rem;
  color: rgba(255, 255, 255, 0.1);
}

/* Line */
.chroma .line {
  display: flex;
}

/* Keyword */
.chroma .k {
  color: #ff79c6;
}

/* KeywordConstant */
.chroma .kc {
  color: #ff79c6;
}

/* KeywordDeclaration */
.chroma .kd {
  color: #8be9fd;
  font-style: italic;
}

/* KeywordNamespace */
.chroma .kn {
  color: #ff79c6;
}

/* KeywordPseudo */
.chroma .kp {
  color: #ff79c6;
}

/* KeywordReserved */
.chroma .kr {
  color: #ff79c6;
}

/* KeywordType */
.chroma .kt {
  color: #8be9fd;
}

/* NameAttribute */
.chroma .na {
  color: #50fa7b;
}

/* NameBuiltin */
.chroma .nb {
  color: #8be9fd;
  font-style: italic;
}

/* NameClass */
.chroma .nc {
  color: #50fa7b;
}

/* NameFunction */
.chroma .nf {
  color: #50fa7b;
}

/* NameLabel */
.chroma .nl {
  color: #8be9fd;
  font-style: italic;
}

/* NameTag */
.chroma .nt {
  color: #ff79c6;
}

/* NameVariable */
.chroma .nv {
  color: #8be9fd;
  font-style: italic;
}

/* NameVariableClass */
.chroma .vc {
  color: #8be9fd;
  font-style: italic;
}

/* NameVariableGlobal */
.chroma .vg {
  color: #8be9fd;
  font-style: italic;
}

/* NameVariableInstance */
.chroma .vi {
  color: #8be9fd;
  font-style: italic;
}

/* LiteralString */
.chroma .s {
  color: #f1fa8c;
}

/* LiteralStringAffix */
.chroma .sa {
  color: #f1fa8c;
}

/* LiteralStringBacktick */
.chroma .sb {
  color: #f1fa8c;
}

/* LiteralStringChar */
.chroma .sc {
  color: #f1fa8c;
}

/* LiteralStringDelimiter */
.chroma .dl {
  color: #f1fa8c;
}

/* LiteralStringDoc */
.chroma .sd {
  color: #f1fa8c;
}

/* LiteralStringDouble */
.chroma .s2 {
  color: #f1fa8c;
}

/* LiteralStringEscape */
.chroma .se {
  color: #f1fa8c;
}

/* LiteralStringHeredoc */
.chroma .sh {
  color: #f1fa8c;
}

/* LiteralStringInterpol */
.chroma .si {
  color: #f1fa8c;
}

/* LiteralStringOther */
.chroma .sx {
  color: #f1fa8c;
}

/* LiteralStringRegex */
.chroma .sr {
  color: #f1fa8c;
}

/* LiteralStringSingle */
.chroma .s1 {
  color: #f1fa8c;
}

/* LiteralStringSymbol */
.chroma .ss {
  color: #f1fa8c;
}

/* LiteralNumber */
.chroma .m {
  color: #bd93f9;
}

/* LiteralNumberBin */
.chroma .mb {
  color: #bd93f9;
}

/* LiteralNumberFloat */
.chroma .mf {
  color: #bd93f9;
}

/* LiteralNumberHex */
.chroma .mh {
  color: #bd93f9;
}

/* LiteralNumberInteger */
.chroma .mi {
  color: #bd93f9;
}

/* LiteralNumberIntegerLong */
.chroma .il {
  color: #bd93f9;
}

/* LiteralNumberOct */
.chroma .mo {
  color: #bd93f9;
}

/* Operator */
.chroma .o {
  color: #ff79c6;
}

/* OperatorWord */
.chroma .ow {
  color: #ff79c6;
}

/* Comment */
.chroma .c {
  color: #6272a4;
}

/* CommentHashbang */
.chroma .ch {
  color: #6272a4;
}

/* CommentMultiline */
.chroma .cm {
  color: #6272a4;
}

/* CommentSingle */
.chroma .c1 {
  color: #6272a4;
}

/* CommentSpecial */
.chroma .cs {
  color: #6272a4;
}

/* CommentPreproc */
.chroma .cp {
  color: #ff79c6;
}

/* CommentPreprocFile */
.chroma .cpf {
  color: #ff79c6;
}

/* GenericDeleted */
.chroma .gd {
  color: #ff5555;
}

/* GenericEmph */
.chroma .ge {
  text-decoration: underline;
}

/* GenericHeading */
.chroma .gh {
  font-weight: bold;
}

/* GenericInserted */
.chroma .gi {
  color: #50fa7b;
  font-weight: bold;
}

/* GenericOutput */
.chroma .go {
  color: #44475a;
}

/* GenericSubheading */
.chroma .gu {
  font-weight: bold;
}

/* GenericUnderline */
.chroma .gl {
  text-decoration: underline;
}

/* End syntax highlighting (see https://github.com/alecthomas/chroma) */

@media not (min-width: 55rem) {
  .left {
    float: left;
    margin-top: 1rem;
  }

  .right {
    float: right;
    text-align: right;
    margin-top: 1rem;
    margin-right: 10px;
  }
}
